    - name: "Build InfluxDB and Grafana Container"
      community.docker.docker_compose_v2:
          project_name: dashboard
          definition:
            #version: '3'
            services:
              InfluxDB:
                container_name: dashboard-InfluxDB-01
                image: influxdb:latest
                environment:
                  - DOCKER_INFLUXDB_INIT_MODE=setup
                  - "INFLUXDB_DB={{ INFLUXDB_DB_NAME }}"
                  - "DOCKER_INFLUXDB_INIT_USERNAME={{ INFLUXDB_USER }}"
                  - "DOCKER_INFLUXDB_INIT_PASSWORD={{ INFLUXDB_PASSWORD }}"
                  - INFLUXDB_HTTP_AUTH_ENABLED=true
                  - "DOCKER_INFLUXDB_INIT_ORG={{ INFLUXDB_ORGANIZATION }}"
                  - "DOCKER_INFLUXDB_INIT_BUCKET={{ INFLUXDB_BUCKET }}"
                    #- DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=S3CRETT0KENFORMY1NFLUXDB
                volumes:
                  - "influxdb-data:/var/lib/influxdb2"
                ports:
                  - "8086:8086"
            volumes:
              influxdb-data:
      notify: "Wait for Containers"

    - name: "Run handler if Containers were building"
      meta: flush_handlers

    - name: "Get InfluxDB token"
      community.docker.docker_container_exec:
        container: dashboard-InfluxDB-01
        command: /bin/bash -c "cat /etc/influxdb2/influx-configs | grep token | grep -v '#'"
        chdir: /root
      register: admintoken

    - name: "Set extracted token as a fact"
      set_fact:
        INFLUXDB_TOKEN: "{{ admintoken.stdout | regex_replace('.*\"(.*?)\"', '\\1') }}"

    - name: "Save InfluxDB admin token to variable"
      copy:
        content: "{{ INFLUXDB_TOKEN }}"
        dest: ~/.influxdb_token
      delegate_to: localhost  

    - name: Create influxdbv2 datasource using FLUX in Grafana
      community.grafana.grafana_datasource:
        name: "datasource-influxdb-flux"
        grafana_url: "http://{{ GRAFANA_SERVER }}:3000"
        grafana_user: "{{ GRAFANA_USER }}"
        grafana_password: "{{ GRAFANA_PASSWORD }}"
        org_id: "1"
        ds_type: "influxdb"
        ds_url: "http://{{ INFLUXDB_SERVER }}:8086"
        additional_json_data:
          version: "Flux"
          organization: "{{ INFLUXDB_ORGANIZATION }}"
          defaultBucket: "{{ INFLUXDB_BUCKET }}"
          tlsSkipVerify: true
        additional_secure_json_data:
          token: "{{ INFLUXDB_TOKEN }}"
